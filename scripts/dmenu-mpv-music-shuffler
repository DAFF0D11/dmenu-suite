#!/bin/sh

MUSIC="$HOME/music"

CACHE="$HOME/.cache/mpvcache"
SOCKET="/tmp/mpvsocket"
PLAYLIST="/tmp/mpvplaylist"

initialise() {
    # TODO figure out a POSIX way of checking if this already exists
    mpv --idle --no-terminal --no-audio-display --input-ipc-server="$SOCKET" &
}

# Update the music database if it has changed.
update_db() {
    if [ ! -f "$CACHE" -o "$MUSIC" -nt "$CACHE" ]; then
        echo 'Caching music database...' >&2 
        find -L "$MUSIC" -type d -links 2 \
                | sed -n "s|^$MUSIC/||p" \
                | sort \
                | grep -v 'art' > $CACHE
    fi
}

# Play all audio files in a directory.
play(){
    if [ -d "$1" ]; then
        find "$1" -regex '.*\.\(mp3\|webm\|m4a\|flac\|ogg\|wav\)' \
            | shuf  > "$PLAYLIST"
        echo '{"command":["loadlist","'"$PLAYLIST"'","replace"]}' \
            | socat - "$SOCKET" >&2
        playerctl --player=mpv pause
        playerctl --player=mpv play
    else
        echo "Album at '$1' not found." >&2
    fi
}

 choose(){
    if [ "$1" ]; then

    CURRENT_PLAYING_SONG=$(echo '{ "command": ["get_property", "path"] }' | socat - /tmp/mpvsocket | jq ".data" | tr -d "\"" )
    # Adding the path back to the choice
    LIST_OF_CHOICES=$(echo $1 | tr ' ' '\n' | xargs -I % echo "${PLAYLIST_CHOICE_PATH}/%")
    IS_IN_CHOICE=$(echo "$LIST_OF_CHOICES" | grep "$CURRENT_PLAYING_SONG")

    if [ "$IS_IN_CHOICE" ] 
    then
        LIST_MINUS_CHOICES=$(cat "$PLAYLIST" | grep -v "$LIST_OF_CHOICES" )
        echo "$LIST_OF_CHOICES" > "$PLAYLIST"
        echo "$LIST_MINUS_CHOICES" | shuf >> "$PLAYLIST"
    else
        LIST_MINUS_CHOICES=$(cat "$PLAYLIST" | grep -v "$LIST_OF_CHOICES" | grep -v "$CURRENT_PLAYING_SONG" )
        echo "$LIST_OF_CHOICES" > "$PLAYLIST"
        echo "$LIST_MINUS_CHOICES" | shuf >> "$PLAYLIST"
        echo "$CURRENT_PLAYING_SONG" >> "$PLAYLIST"
    fi

    echo '{"command":["loadlist","'"$PLAYLIST"'","replace"]}' | socat - "$SOCKET" >&2
    playerctl --player=mpv pause
    playerctl --player=mpv play
    fi
}

case $1 in
    -p) MODE=PLAYLIST ;;
    -i) MODE=INITIALISE ;;
    *) MODE=CHOOSE ;;
esac

while true; do
    case "$MODE" in
        PLAYLIST) 
            PROMPT="PLAYLIST >" 
            update_db
            DMENU_CHOICE=$(cat "$CACHE" | dmenu-suite -i -ex "ctrl-h" -c -l 30 -p "$PROMPT")
            ;;
        CHOOSE) 
            PROMPT="SONG >" 
            if [ -e $PLAYLIST ]; then
                   CURRENT=$(echo '{ "command": ["get_property", "filename"] }' | socat - /tmp/mpvsocket | jq ".data" | tr -d "\"" )
                   DIGIT=$(cat /tmp/mpvplaylist | nl -v 0 | grep "$CURRENT" | cut -f1)
                   PLAYLIST_CHOICE_PATH=$( cat "$PLAYLIST"| rev | cut -d '/' -f2- | rev | head -n 1)
                   DMENU_CHOICE=$(cat "$PLAYLIST" | rev | cut -d '/' -f1 | rev | dmenu-suite -d "$DIGIT" -i -ex "ctrl-l" -c -l 30 -p "$PROMPT")

            else
               # initialise
                DMENU_CHOICE=NOPLAYLIST
            fi
            ;;
        INITIALISE)
            initialise
            break;
            ;;
    esac

    case "$DMENU_CHOICE" in
        NOPLAYLIST)MODE=PLAYLIST ;;
        ctrl-h*)MODE=CHOOSE ;;
        ctrl-l*)MODE=PLAYLIST ;;
        *) case "$MODE" in
               PLAYLIST) [ "$DMENU_CHOICE" ] && play "$MUSIC/$DMENU_CHOICE" >/dev/null 2>&1 ;;
                CHOOSE)  choose "$DMENU_CHOICE" >/dev/null 2>&1;;
            esac
            break ;;
    esac
done
