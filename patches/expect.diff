diff --git a/dmenu.c b/dmenu.c
index 65f25ce..a91b6e6 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -44,6 +44,7 @@ static struct item *items = NULL;
 static struct item *matches, *matchend;
 static struct item *prev, *curr, *next, *sel;
 static int mon = -1, screen;
+static char *expected;
 
 static Atom clip, utf8;
 static Display *dpy;
@@ -303,7 +304,14 @@ movewordedge(int dir)
 			cursor = nextrune(+1);
 	}
 }
-
+static void
+expect(char *expect){
+  if(sel && expected && strstr(expected,expect)){
+      printf("%s\t%s\n",expect,sel->text);
+      cleanup();
+      exit(1);
+  }
+}
 static void
 keypress(XKeyEvent *ev)
 {
@@ -325,40 +333,49 @@ keypress(XKeyEvent *ev)
 
 	if (ev->state & ControlMask) {
 		switch(ksym) {
-		case XK_a: ksym = XK_Home;      break;
-		case XK_b: ksym = XK_Left;      break;
-		case XK_c: ksym = XK_Escape;    break;
-		case XK_d: ksym = XK_Delete;    break;
-		case XK_e: ksym = XK_End;       break;
-		case XK_f: ksym = XK_Right;     break;
-		case XK_g: ksym = XK_Escape;    break;
-		case XK_h: ksym = XK_BackSpace; break;
-		case XK_i: ksym = XK_Tab;       break;
-		case XK_j: /* fallthrough */
-		case XK_J: /* fallthrough */
-		case XK_m: /* fallthrough */
+		case XK_a: expect("ctrl-a"); ksym = XK_Home;      break;
+		case XK_b: expect("ctrl-b"); ksym = XK_Left;      break;
+		case XK_c: expect("ctrl-c"); ksym = XK_Escape;    break;
+		case XK_d: expect("ctrl-d"); ksym = XK_Delete;    break;
+		case XK_e: expect("ctrl-e"); ksym = XK_End;       break;
+		case XK_f: expect("ctrl-f"); ksym = XK_Right;     break;
+		case XK_g: expect("ctrl-g"); ksym = XK_Escape;    break;
+		case XK_h: expect("ctrl-h"); ksym = XK_BackSpace; break;
+		case XK_i: expect("ctrl-i"); ksym = XK_Tab;       break;
+		case XK_j: expect("ctrl-j"); /* fallthrough */
+		case XK_J:/* fallthrough */
+		case XK_l: expect("ctrl-l"); break;
+		case XK_m: expect("ctrl-m"); /* fallthrough */
 		case XK_M: ksym = XK_Return; ev->state &= ~ControlMask; break;
-		case XK_n: ksym = XK_Down;      break;
-		case XK_p: ksym = XK_Up;        break;
-
+		case XK_n: expect("ctrl-n"); ksym = XK_Down;      break;
+		case XK_o: expect("ctrl-o"); break;
+		case XK_p: expect("ctrl-p"); ksym = XK_Up; break;
+		case XK_q: expect("ctrl-q"); break;
+		case XK_r: expect("ctrl-r"); break;
+		case XK_s: expect("ctrl-s"); break;
+		case XK_t: expect("ctrl-t"); break;
 		case XK_k: /* delete right */
+      expect("ctrl-k");
 			text[cursor] = '\0';
 			match();
 			break;
-		case XK_u: /* delete left */
+		case XK_u: expect("ctrl-u"); /* delete left */
 			insert(NULL, 0 - cursor);
 			break;
-		case XK_w: /* delete word */
+		case XK_v: expect("ctrl-v"); break;
+		case XK_w: expect("ctrl-w"); /* delete word */
 			while (cursor > 0 && strchr(worddelimiters, text[nextrune(-1)]))
 				insert(NULL, nextrune(-1) - cursor);
 			while (cursor > 0 && !strchr(worddelimiters, text[nextrune(-1)]))
 				insert(NULL, nextrune(-1) - cursor);
 			break;
-		case XK_y: /* paste selection */
+		case XK_y: expect("ctrl-y"); /* paste selection */
 		case XK_Y:
 			XConvertSelection(dpy, (ev->state & ShiftMask) ? clip : XA_PRIMARY,
 			                  utf8, utf8, win, CurrentTime);
 			return;
+		case XK_x: expect("ctrl-x"); break;
+		case XK_z: expect("ctrl-z"); break;
 		case XK_Left:
 			movewordedge(-1);
 			goto draw;
@@ -464,6 +481,12 @@ insert:
 		break;
 	case XK_Return:
 	case XK_KP_Enter:
+		if ((ev->state & ShiftMask)) {
+            printf("shift-enter\t%s\n",text);
+			cleanup();
+			exit(0);
+            break;
+        }
 		puts((sel && !(ev->state & ShiftMask)) ? sel->text : text);
 		if (!(ev->state & ControlMask)) {
 			cleanup();
@@ -721,6 +744,8 @@ main(int argc, char *argv[])
 			mon = atoi(argv[++i]);
 		else if (!strcmp(argv[i], "-p"))   /* adds prompt to left of input field */
 			prompt = argv[++i];
+		else if (!strcmp(argv[i], "-ex"))   /* */
+			expected = argv[++i];
 		else if (!strcmp(argv[i], "-fn"))  /* font or font set */
 			fonts[0] = argv[++i];
 		else if (!strcmp(argv[i], "-nb"))  /* normal background color */
-- 
2.20.1
